global !p
def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + + "')")
    return x != '0' and y != '0'
endglobal

snippet macro "built-in latex macro"
\newcommand{${1:macro name}}{${2:macro def}}
$0
endsnippet

snippet xmacro "latex macro with default param values"
\newcommandx{${1:macro name}}[${2:no. params}][${3: default value e.g 1=a,3=b}]{${2:macro def}}
$0
endsnippet

snippet boxc "Comment Box Marking the start of each lecture"
`!p snip.rv = '%%'+'%'*(len(t[1])+2)+'%%'`
%  $1  %
`!p snip.rv = '%%'+'%'*(len(t[1])+2)+'%%'`
$0
endsnippet

snippet today "Date"
`date +%a\ %b\ %d,\ %Y`
endsnippet

snippet fig "Include Graphics" i
\begin{figure}[H]
\caption{$1}
\centering
\includegraphics[width=0.5\textwidth]{$2}
\end{figure}
endsnippet

snippet algo "algorithm" b
\begin{algorithm}
	\caption{$1}
	\begin{algorithmic}[1]
		$0
	\end{algorithmic}
\end{algorithm}
endsnippet

snippet table "Table environment" b
\begin{table}[${1:htpb}]
	\centering
	\caption{${2:caption}}
	\label{tab:${3:label}}
	\begin{tabular}{${5:c}}
	$0${5/((?<=.)c|l|r)|./(?1: & )/g}
	\end{tabular}
\end{table}
endsnippet

snippet enum "Enumerate" bA
\begin{enumerate}
	\item $0
\end{enumerate}
endsnippet

snippet item "Itemize" bA
\begin{itemize}
	\item $0
\end{itemize}
endsnippet

snippet bmat "bmat" iA
\begin{bmatrix} $1 \end{bmatrix} $0
endsnippet

snippet pmat "pmat" iA
\begin{pmatrix} $1 \end{pmatrix} $0
endsnippet

snippet ali "Align" bA
\begin{align*}
	${1:${VISUAL}}
\end{align*}
endsnippet

snippet code "lstlisting" bA
\begin{lstlisting}[language=$1]
$0
\end{lstlisting}
endsnippet

snippet thm "theorem" bA
\begin{theorem}[$1]
$0
\end{theorem}
endsnippet

snippet def "definition" bA
\begin{definition}[$1]
$0
\end{definition}
endsnippet

snippet ax "axiom" bA
\begin{axiom}[$1]
$0
\end{axiom}
endsnippet

snippet eg "example" bA
\begin{example}
$0
\end{example}
endsnippet

snippet beg "begin{} / end{}" bA
\begin{$1}
    $0
\end{$1}
endsnippet

snippet mk "inline math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
    snip.rv = ' '
else:
    snip.rv = ''
`$2
endsnippet

snippet dk "display math" wA
\[
    $1
\]
$0
endsnippet


context "math()"
snippet // "Fraction" iA
\\frac{$1}{$2}$0
endsnippet

context "math()"
snippet '((\d+)|(\d*)(\\)?([A-Za-z]+)((\^|_)(\{\d+\}|\d))*)/' "Fraction" wrA
\\frac{`!p snip.rv = match.group(1)`}{$1}$0
endsnippet


context "math()"
snippet '([A-Za-z])(\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])_(\d\d)' "auto subscript" wrA
`!p snip.rv = match.group(1)`_{`!p snip.rv = match.group(2)`}
endsnippet

context "math()"
snippet sr "^2" iA
^2
endsnippet

context "math()"
snippet cb "^3" iA
^3
endsnippet

context "math()"
snippet td "superscript" iA
^{$1}$0
endsnippet

snippet p "paranthesis" i
($1)$0
endsnippet

context "math()"
snippet -> "right arrow" iA
\rightarrow
endsnippet

context "math()"
snippet => "imply" iA
\Rightarrow
endsnippet

context "math()"
snippet <- "left arrow" iA
\leftarrow
endsnippet

context "math()"
snippet <= "left imply" iA
\Leftarrow
endsnippet

context "math()"
snippet ;iff "iff" iA
\Leftrightarrow
endsnippet

context "math()"
snippet |-> "maps to" A
\mapsto
endsnippet

context "math()"
snippet 000 "infinity" iwA
\infty
endsnippet

context "math()"
snippet ... "..." iA
\cdots
endsnippet

priority 10
context "math()"
snippet #'(a|b|c|d|D|e|f|G|l|m|n|o|O|s|t|z)# "commonly used greek symbols" riwA
\\`!p
greek_dict = {'a': 'alpha', 'b': 'beta', 'c': 'theta', 'd': 'delta','D': 'Delta', 'e': 'varepsilon', 'f': 'varphi', 'G': 'Gamma', 'l': 'lambda', 'm': 'mu', 'n': 'nu', 'o': 'omega', 'O': 'Omega', 's': 'sigma', 't': 'tau', 'z': 'zeta'}

snip.rv = greek_dict[match.group(1)]
`
endsnippet

# Text
snippet tt "inline text in math block" wA
\texttt{$1}$0
endsnippet

snippet tb "bold text" iA
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet ti "italic" i
\textit{${1:${VISUAL}}}$0
endsnippet

snippet tu "underline" i
\underline{${1:${VISUAL}}}$0
endsnippet

snippet tc "colored text" wA
\textcolor{${1:red}}{$2}$0
endsnippet

snippet thh "highlighted text" iA
\colorbox{${1:orange}}{$2}$0
endsnippet

# Links, References
snippet url "url" wA
\href{$1}{$2}$0
endsnippet

snippet file "link to local file" w
\href{run:${1:relative path}}{$2}$0
endsnippet

snippet hlab "insert manual label" wA
\hypertarget{$1}{${2:$1}}$0
endsnippet

snippet htag "insert manual ref" wA
\hyperlink{$1}{$2}$0
endsnippet

# More Math
priority 300
context "math()"
snippet int "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} d${4:x} $0
endsnippet

context "math()"
snippet | "integral evaluation bar" iA
\Big|_{${1}}^{${2}} $0
endsnippet

priority 10
context "math()"
snippet bar "bar" iA
\overline{${1:${VISUAL}}}$0
endsnippet

priority 10
context "math()"
snippet hat "hat" iA
\hat{${1:${VISUAL}}}$0
endsnippet

priority 10
context "math()"
snippet tild "tilda" iA
\tilde{${1:${VISUAL}}}$0
endsnippet

priority 10
context "math()"
snippet rt "square root" wA
\sqrt{${1:${VISUAL}}}$0
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "bar" riA
\overline{`!p snip.rv=match.group(1)`}
endsnippet

# clashes with xt -> x(t)
priority 100
context "math()"
snippet "([a-zA-Z])tild" "tilda" riA
\tilde{`!p snip.rv=match.group(1)`}
endsnippet

priority 100
context "math()"
snippet "\s([a-zA-Z0-9])rt" "square root" rwA
\sqrt{`!p snip.rv=match.group(1)`}
endsnippet

context "math()"
snippet set "Set Notation" i
\\{$1\\}$0
endsnippet

context "math()"
snippet brac "<..>" iwA
\left\langle ${1:${VISUAL}}\right\rangle$0
endsnippet

snippet dv "derivative definition" w
\lim \limits_{h \rightarrow 0} \frac{f($1+h)-f($1)}{h}$0
endsnippet

context "math()"
snippet lim "limits" iwA
\lim_{${1:n} \rightarrow ${2:\infty}}$0
endsnippet

context "math()"
snippet sum "\sum" iwA
\sum_{${1:i=0}}^{${2:\infty}}$0
endsnippet

context "math()"
snippet norm "norm" iwA
\left\|$1\right\|$0
endsnippet

context "math()"
snippet abs "absolute value" iwA
\left|$1\right|$0
endsnippet

context "math()"
snippet sb "paranthesis" iA
\left[$1\right]$0
endsnippet

context "math()"
snippet lr "paranthesis" iA
\left($1\right)$0
endsnippet

snippet @ "evaluated at" iA
\Big|_{$1}^{$2}$0
endsnippet

snippet floor "floor" i
\left\lfloor $1 \right\rfloor$0
endsnippet

snippet ceil "ceiling" i
\left\lceil $1 \right\rceil$0
endsnippet

priority 100
context "math()"
snippet 'dd([\w\\]+)\s' "differentiate w.r.t" rwA
\frac{d}{d`!p snip.rv = match.group(1)`}$0
endsnippet

priority 200
context "math()"
snippet 'pdd([\w\\]+)\s' "differentiate w.r.t" rwA
\frac{\partial}{\partial `!p snip.rv = match.group(1)`}$0
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta)' "ln" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

snippet cite "add citation reference" i
~\cite{${1:${VISUAL}}}$0
endsnippet
